#include <iostream>
using namespace std;

bool all_assigned(int &row,int &column, int grid[9][9])
{
    int i,j;
    for(i=0;i<9;i++)
    {
        for(j=0;j<9;j++)
        {
            if(grid[i][j] == 0)
            {
                row = i;
                column = j;
                return 0;
            }
        }
    }
    return 1;
}

bool is_safe(int row,int column, int option, int grid[9][9])
{
int i,j;
for(i=0;i<9;i++)
{
    if(grid[row][i] == option)
    return 0;
}
for(i=0;i<9;i++)
{
    if(grid[i][column] == option)
    return 0;
}
int starting_row = row-row%3;
int starting_column = column-column%3;
for(i=0;i<3;i++)
{
    for(j=0;j<3;j++)
    {
        if(grid[starting_row+i][starting_column+j] == option)
        return 0;
    }
}
return 1;
}

bool solve_for(int grid[9][9])
{
    int row,column;
    if(all_assigned(row,column,grid))
    return true;
    int option;
    for(option=1;option<=9;option++)
    {
        if(is_safe(row,column,option,grid))
        {
            grid[row][column]=option;
            bool ans;
            ans = solve_for(grid);
            if(ans)
            return 1;
        }
    }
    grid[row][column] =0;
    return 0;
}

int main() {
	//code
	int t;
	cin>>t;
	while(t--)
	{
	    int grid[9][9];
	    int i,j;
	    for(i=0;i<9;i++)
	    {
	        for(j=0;j<9;j++)
	        {
	            cin>>grid[i][j];
	        }
	    }
	    solve_for(grid);
	    for(i=0;i<9;i++)
	    {
	        for(j=0;j<9;j++)
	        cout<<grid[i][j]<<" ";
	        //cout<<endl;
	    }
	    cout<<endl;
	}
	return 0;
}
